{"ast":null,"code":"var _jsxFileName = \"/Users/gyanmistry/SoftdevI/ASL-Study-Tool/ASLStudyTool/client/src/components/Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './Home.css';\n\n// Removing the conflicting inline styles entirely - using only the CSS file styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  var _searchResults$cards, _searchResults$decks;\n  const [decks, setDecks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState({\n    cards: [],\n    decks: []\n  });\n  const [isSearching, setIsSearching] = useState(false);\n  const [starredCards, setStarredCards] = useState([]);\n  const [loadingStarred, setLoadingStarred] = useState(true);\n  const navigate = useNavigate();\n\n  // Fetch starred cards\n  useEffect(() => {\n    const fetchStarredCards = async () => {\n      try {\n        // In a real app, you'd get the actual user ID from auth\n        const demoUserId = \"demo-user-id\"; // Hardcoded for demo\n\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/users/${demoUserId}/starred-cards`);\n        setStarredCards(response.data.cards || []);\n      } catch (err) {\n        console.error('Error fetching starred cards:', err);\n        // Don't set an error state, just use an empty array\n        setStarredCards([]);\n      } finally {\n        setLoadingStarred(false);\n      }\n    };\n    fetchStarredCards();\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        console.log('Starting data fetch...');\n        // First, get the demo user\n        const usersResponse = await axios.get(`${process.env.REACT_APP_API_URL}/api/users`);\n        console.log('Users API response:', usersResponse.data);\n        if (!usersResponse.data || usersResponse.data.length === 0) {\n          throw new Error('No users found');\n        }\n        const demoUser = usersResponse.data.find(user => user.email === 'demo@example.com');\n        console.log('Found demo user:', demoUser);\n        if (!demoUser) {\n          throw new Error('Demo user not found');\n        }\n\n        // Then fetch decks for that user\n        console.log('Fetching decks for user:', demoUser.id);\n        const decksResponse = await axios.get(`${process.env.REACT_APP_API_URL}/api/decks/${demoUser.id}`);\n        console.log('Decks API response:', decksResponse.data);\n        if (!decksResponse.data) {\n          throw new Error('No decks data received');\n        }\n        const fetchedDecks = decksResponse.data;\n        setDecks(fetchedDecks);\n        console.log(`Fetched ${fetchedDecks.length} decks`);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError(err.message || 'Failed to load decks');\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleSearch = async e => {\n    e.preventDefault();\n    console.log('Search triggered with term:', searchTerm);\n    if (!searchTerm.trim()) {\n      console.log('Empty search term, clearing results');\n      setSearchResults({\n        cards: [],\n        decks: []\n      });\n      return;\n    }\n    setIsSearching(true);\n    try {\n      // Use the server-side search API\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/search`, {\n        params: {\n          term: searchTerm.trim()\n        }\n      });\n      console.log('Search API response:', response.data);\n\n      // Handle the case when API returns an array instead of {cards, decks} object\n      if (Array.isArray(response.data)) {\n        // If the response is an array, assume it's an array of cards\n        setSearchResults({\n          cards: response.data,\n          decks: []\n        });\n      } else if (response.data && typeof response.data === 'object') {\n        // Ensure cards and decks properties exist\n        const formattedResults = {\n          cards: Array.isArray(response.data.cards) ? response.data.cards : [],\n          decks: Array.isArray(response.data.decks) ? response.data.decks : []\n        };\n        setSearchResults(formattedResults);\n      } else {\n        // Fallback if response has unexpected format\n        setSearchResults({\n          cards: [],\n          decks: []\n        });\n      }\n    } catch (err) {\n      console.error('Error searching:', err);\n      // Show an empty result set on error\n      setSearchResults({\n        cards: [],\n        decks: []\n      });\n    } finally {\n      setIsSearching(false);\n    }\n  };\n  const handleCardResultClick = (deckId, cardId) => {\n    navigate(`/deck/${deckId}`, {\n      state: {\n        fromSearch: true,\n        highlightCardId: cardId\n      }\n    });\n  };\n  const handleDeckResultClick = deckId => {\n    navigate(`/deck/${deckId}`);\n  };\n  const clearSearch = () => {\n    setSearchTerm('');\n    setSearchResults({\n      cards: [],\n      decks: []\n    });\n  };\n  const hasStarredCards = starredCards.length > 0;\n\n  // Handler for when a starred card is clicked\n  const handleStarredCardClick = (cardId, deckId) => {\n    navigate(`/deck/${deckId}`, {\n      state: {\n        fromSearch: true,\n        highlightCardId: cardId\n      }\n    });\n  };\n\n  // Create a virtual starred deck\n  const viewStarredCards = () => {\n    // Navigate to a special \"deck\" that shows all starred cards\n    // In this implementation, we'll just redirect to the deck containing the first starred card\n    if (starredCards.length > 0) {\n      const firstCard = starredCards[0];\n      navigate(`/deck/${firstCard.deck_id}`, {\n        state: {\n          fromStarred: true,\n          highlightCardId: firstCard.id\n        }\n      });\n    }\n  };\n  if (loading && loadingStarred) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-container loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading decks...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-container error\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.reload(),\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this);\n  }\n  const hasSearchResults = (searchResults === null || searchResults === void 0 ? void 0 : (_searchResults$cards = searchResults.cards) === null || _searchResults$cards === void 0 ? void 0 : _searchResults$cards.length) > 0 || (searchResults === null || searchResults === void 0 ? void 0 : (_searchResults$decks = searchResults.decks) === null || _searchResults$decks === void 0 ? void 0 : _searchResults$decks.length) > 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"home-title\",\n      children: \"ASL Study Decks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearch,\n        className: \"search-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchTerm,\n          onChange: e => {\n            setSearchTerm(e.target.value);\n            if (!e.target.value.trim()) {\n              setSearchResults({\n                cards: [],\n                decks: []\n              });\n            }\n          },\n          placeholder: \"Search for signs or decks...\",\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"search-button\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), isSearching && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner-small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Searching...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), hasSearchResults && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-results-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-results-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Search Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: clearSearch,\n            className: \"clear-search-btn\",\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), searchResults.decks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"search-section-title\",\n            children: \"Decks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"results-list\",\n            children: searchResults.decks.map(deck => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"result-item\",\n              onClick: () => handleDeckResultClick(deck.id),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-sign\",\n                children: deck.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-deck\",\n                children: \"Deck\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 23\n              }, this)]\n            }, deck.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 15\n        }, this), searchResults.cards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"search-section-title\",\n            children: \"Signs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"results-list\",\n            children: searchResults.cards.map(result => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"result-item\",\n              onClick: () => handleCardResultClick(result.deck.id, result.id),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-sign\",\n                children: result.answer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-deck\",\n                children: result.deck.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 23\n              }, this)]\n            }, result.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), !hasSearchResults && searchTerm.trim() && !isSearching && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-results\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"No results found matching \\\"\", searchTerm, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deck-grid\",\n      children: [hasStarredCards && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deck-link starred-deck-link\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"deck-card starred-deck\",\n          onClick: viewStarredCards,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Starred Cards (\", starredCards.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this), decks.map(deck => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/deck/${deck.id}`,\n        className: \"deck-link\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"deck-card\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: deck.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this)\n      }, deck.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"Dey7i4ezvIwvU7DfVQcu5bVYw2c=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","axios","jsxDEV","_jsxDEV","Home","_s","_searchResults$cards","_searchResults$decks","decks","setDecks","loading","setLoading","error","setError","searchTerm","setSearchTerm","searchResults","setSearchResults","cards","isSearching","setIsSearching","starredCards","setStarredCards","loadingStarred","setLoadingStarred","navigate","fetchStarredCards","demoUserId","response","get","process","env","REACT_APP_API_URL","data","err","console","fetchData","log","usersResponse","length","Error","demoUser","find","user","email","id","decksResponse","fetchedDecks","message","handleSearch","e","preventDefault","trim","params","term","Array","isArray","formattedResults","handleCardResultClick","deckId","cardId","state","fromSearch","highlightCardId","handleDeckResultClick","clearSearch","hasStarredCards","handleStarredCardClick","viewStarredCards","firstCard","deck_id","fromStarred","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","hasSearchResults","onSubmit","type","value","onChange","target","placeholder","map","deck","title","result","answer","to","_c","$RefreshReg$"],"sources":["/Users/gyanmistry/SoftdevI/ASL-Study-Tool/ASLStudyTool/client/src/components/Home.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './Home.css';\n\n// Removing the conflicting inline styles entirely - using only the CSS file styles\n\ninterface User {\n  id: string;\n  email: string;\n}\n\ninterface Deck {\n  id: string;\n  title: string;\n  user_id: string;\n  type?: string;\n}\n\ninterface SearchResult {\n  id: string;\n  answer: string;\n  video_url: string;\n  deck_id: string;\n  deck: {\n    id: string;\n    title: string;\n  };\n  type: string;\n}\n\nconst Home: React.FC = () => {\n  const [decks, setDecks] = useState<Deck[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState<{ cards: SearchResult[], decks: Deck[] }>({\n    cards: [],\n    decks: []\n  });\n  const [isSearching, setIsSearching] = useState(false);\n  const [starredCards, setStarredCards] = useState<SearchResult[]>([]);\n  const [loadingStarred, setLoadingStarred] = useState(true);\n  \n  const navigate = useNavigate();\n\n  // Fetch starred cards\n  useEffect(() => {\n    const fetchStarredCards = async () => {\n      try {\n        // In a real app, you'd get the actual user ID from auth\n        const demoUserId = \"demo-user-id\"; // Hardcoded for demo\n        \n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/users/${demoUserId}/starred-cards`);\n        setStarredCards(response.data.cards || []);\n      } catch (err) {\n        console.error('Error fetching starred cards:', err);\n        // Don't set an error state, just use an empty array\n        setStarredCards([]);\n      } finally {\n        setLoadingStarred(false);\n      }\n    };\n\n    fetchStarredCards();\n  }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      \n      try {\n        console.log('Starting data fetch...');\n        // First, get the demo user\n        const usersResponse = await axios.get(`${process.env.REACT_APP_API_URL}/api/users`);\n        \n        console.log('Users API response:', usersResponse.data);\n        \n        if (!usersResponse.data || usersResponse.data.length === 0) {\n          throw new Error('No users found');\n        }\n        \n        const demoUser = usersResponse.data.find((user: User) => user.email === 'demo@example.com');\n        console.log('Found demo user:', demoUser);\n        \n        if (!demoUser) {\n          throw new Error('Demo user not found');\n        }\n\n        // Then fetch decks for that user\n        console.log('Fetching decks for user:', demoUser.id);\n        const decksResponse = await axios.get(`${process.env.REACT_APP_API_URL}/api/decks/${demoUser.id}`);\n        \n        console.log('Decks API response:', decksResponse.data);\n        \n        if (!decksResponse.data) {\n          throw new Error('No decks data received');\n        }\n        \n        const fetchedDecks = decksResponse.data;\n        setDecks(fetchedDecks);\n        console.log(`Fetched ${fetchedDecks.length} decks`);\n        \n        setLoading(false);\n      } catch (err: any) {\n        console.error('Error fetching data:', err);\n        setError(err.message || 'Failed to load decks');\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleSearch = async (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log('Search triggered with term:', searchTerm);\n    \n    if (!searchTerm.trim()) {\n      console.log('Empty search term, clearing results');\n      setSearchResults({ cards: [], decks: [] });\n      return;\n    }\n    \n    setIsSearching(true);\n    \n    try {\n      // Use the server-side search API\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/search`, {\n        params: { term: searchTerm.trim() }\n      });\n      \n      console.log('Search API response:', response.data);\n      \n      // Handle the case when API returns an array instead of {cards, decks} object\n      if (Array.isArray(response.data)) {\n        // If the response is an array, assume it's an array of cards\n        setSearchResults({ \n          cards: response.data, \n          decks: [] \n        });\n      } else if (response.data && typeof response.data === 'object') {\n        // Ensure cards and decks properties exist\n        const formattedResults = {\n          cards: Array.isArray(response.data.cards) ? response.data.cards : [],\n          decks: Array.isArray(response.data.decks) ? response.data.decks : []\n        };\n        setSearchResults(formattedResults);\n      } else {\n        // Fallback if response has unexpected format\n        setSearchResults({ cards: [], decks: [] });\n      }\n    } catch (err: any) {\n      console.error('Error searching:', err);\n      // Show an empty result set on error\n      setSearchResults({ cards: [], decks: [] });\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  const handleCardResultClick = (deckId: string, cardId: string) => {\n    navigate(`/deck/${deckId}`, { state: { fromSearch: true, highlightCardId: cardId }});\n  };\n  \n  const handleDeckResultClick = (deckId: string) => {\n    navigate(`/deck/${deckId}`);\n  };\n\n  const clearSearch = () => {\n    setSearchTerm('');\n    setSearchResults({ cards: [], decks: [] });\n  };\n\n  const hasStarredCards = starredCards.length > 0;\n\n  // Handler for when a starred card is clicked\n  const handleStarredCardClick = (cardId: string, deckId: string) => {\n    navigate(`/deck/${deckId}`, { state: { fromSearch: true, highlightCardId: cardId }});\n  };\n\n  // Create a virtual starred deck\n  const viewStarredCards = () => {\n    // Navigate to a special \"deck\" that shows all starred cards\n    // In this implementation, we'll just redirect to the deck containing the first starred card\n    if (starredCards.length > 0) {\n      const firstCard = starredCards[0];\n      navigate(`/deck/${firstCard.deck_id}`, { state: { fromStarred: true, highlightCardId: firstCard.id }});\n    }\n  };\n\n  if (loading && loadingStarred) {\n    return (\n      <div className=\"home-container loading\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading decks...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"home-container error\">\n        <div className=\"error-message\">\n          <h2>Error</h2>\n          <p>{error}</p>\n          <button onClick={() => window.location.reload()}>Try Again</button>\n        </div>\n      </div>\n    );\n  }\n\n  const hasSearchResults = \n    (searchResults?.cards?.length > 0) || \n    (searchResults?.decks?.length > 0);\n\n  return (\n    <div className=\"home-container\">\n      <h1 className=\"home-title\">ASL Study Decks</h1>\n      \n      <div className=\"search-container\">\n        <form onSubmit={handleSearch} className=\"search-form\">\n          <input\n            type=\"text\"\n            value={searchTerm}\n            onChange={(e) => {\n              setSearchTerm(e.target.value);\n              if (!e.target.value.trim()) {\n                setSearchResults({ cards: [], decks: [] });\n              }\n            }}\n            placeholder=\"Search for signs or decks...\"\n            className=\"search-input\"\n          />\n          <button type=\"submit\" className=\"search-button\">\n            Search\n          </button>\n        </form>\n        \n        {isSearching && (\n          <div className=\"search-loading\">\n            <div className=\"loading-spinner-small\"></div>\n            <p>Searching...</p>\n          </div>\n        )}\n        \n        {hasSearchResults && (\n          <div className=\"search-results-container\">\n            <div className=\"search-results-header\">\n              <h3>Search Results</h3>\n              <button onClick={clearSearch} className=\"clear-search-btn\">Clear</button>\n            </div>\n            \n            {searchResults.decks.length > 0 && (\n              <div className=\"search-section\">\n                <h4 className=\"search-section-title\">Decks</h4>\n                <ul className=\"results-list\">\n                  {searchResults.decks.map(deck => (\n                    <li key={deck.id} className=\"result-item\" onClick={() => handleDeckResultClick(deck.id)}>\n                      <span className=\"result-sign\">{deck.title}</span>\n                      <span className=\"result-deck\">Deck</span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n            \n            {searchResults.cards.length > 0 && (\n              <div className=\"search-section\">\n                <h4 className=\"search-section-title\">Signs</h4>\n                <ul className=\"results-list\">\n                  {searchResults.cards.map(result => (\n                    <li key={result.id} className=\"result-item\" onClick={() => handleCardResultClick(result.deck.id, result.id)}>\n                      <span className=\"result-sign\">{result.answer}</span>\n                      <span className=\"result-deck\">{result.deck.title}</span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </div>\n        )}\n        \n        {!hasSearchResults && searchTerm.trim() && !isSearching && (\n          <div className=\"no-results\">\n            <p>No results found matching \"{searchTerm}\"</p>\n          </div>\n        )}\n      </div>\n      \n      <div className=\"deck-grid\">\n        {/* Starred Cards \"Deck\" - only show if there are starred cards */}\n        {hasStarredCards && (\n          <div className=\"deck-link starred-deck-link\">\n            <div className=\"deck-card starred-deck\" onClick={viewStarredCards}>\n              <h2>Starred Cards ({starredCards.length})</h2>\n            </div>\n          </div>\n        )}\n        \n        {/* Regular decks */}\n        {decks.map(deck => (\n          <Link \n            key={deck.id}\n            to={`/deck/${deck.id}`}\n            className=\"deck-link\"\n          >\n            <div className=\"deck-card\">\n              <h2>{deck.title}</h2>\n            </div>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}