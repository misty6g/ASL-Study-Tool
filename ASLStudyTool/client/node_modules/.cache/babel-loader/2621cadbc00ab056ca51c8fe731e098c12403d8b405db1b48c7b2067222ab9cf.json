{"ast":null,"code":"var _jsxFileName = \"/Users/gyanmistry/SoftdevI/ASL-Study-Tool/ASLStudyTool/client/src/components/Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './Home.css';\n\n// Removing the conflicting inline styles entirely - using only the CSS file styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [decks, setDecks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState({\n    cards: [],\n    decks: []\n  });\n  const [isSearching, setIsSearching] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        console.log('Starting data fetch...');\n        // First, get the demo user\n        const usersResponse = await axios.get(`${process.env.REACT_APP_API_URL}/api/users`);\n        console.log('Users API response:', usersResponse.data);\n        if (!usersResponse.data || usersResponse.data.length === 0) {\n          throw new Error('No users found');\n        }\n        const demoUser = usersResponse.data.find(user => user.email === 'demo@example.com');\n        console.log('Found demo user:', demoUser);\n        if (!demoUser) {\n          throw new Error('Demo user not found');\n        }\n\n        // Then fetch decks for that user\n        console.log('Fetching decks for user:', demoUser.id);\n        const decksResponse = await axios.get(`${process.env.REACT_APP_API_URL}/api/decks/${demoUser.id}`);\n        console.log('Decks API response:', decksResponse.data);\n        if (!decksResponse.data) {\n          throw new Error('No decks data received');\n        }\n        const fetchedDecks = decksResponse.data;\n        setDecks(fetchedDecks);\n        console.log(`Fetched ${fetchedDecks.length} decks`);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError(err.message || 'Failed to load decks');\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleSearch = async e => {\n    e.preventDefault();\n    console.log('Search triggered with term:', searchTerm);\n    if (!searchTerm.trim()) {\n      console.log('Empty search term, clearing results');\n      setSearchResults({\n        cards: [],\n        decks: []\n      });\n      return;\n    }\n    setIsSearching(true);\n    try {\n      // Use the server-side search API\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/search`, {\n        params: {\n          term: searchTerm.trim()\n        }\n      });\n      console.log('Search API response:', response.data);\n      setSearchResults(response.data);\n    } catch (err) {\n      console.error('Error searching:', err);\n      // Show an empty result set on error\n      setSearchResults({\n        cards: [],\n        decks: []\n      });\n    } finally {\n      setIsSearching(false);\n    }\n  };\n  const handleCardResultClick = (deckId, cardId) => {\n    navigate(`/deck/${deckId}`, {\n      state: {\n        fromSearch: true,\n        highlightCardId: cardId\n      }\n    });\n  };\n  const handleDeckResultClick = deckId => {\n    navigate(`/deck/${deckId}`);\n  };\n  const clearSearch = () => {\n    setSearchTerm('');\n    setSearchResults({\n      cards: [],\n      decks: []\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-container loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading decks...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-container error\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.reload(),\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this);\n  }\n  const hasSearchResults = searchResults.cards.length > 0 || searchResults.decks.length > 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"home-title\",\n      children: \"ASL Study Decks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearch,\n        className: \"search-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchTerm,\n          onChange: e => {\n            setSearchTerm(e.target.value);\n            if (!e.target.value.trim()) {\n              setSearchResults({\n                cards: [],\n                decks: []\n              });\n            }\n          },\n          placeholder: \"Search for signs or decks...\",\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"search-button\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), isSearching && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner-small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Searching...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), hasSearchResults && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-results-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-results-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Search Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: clearSearch,\n            className: \"clear-search-btn\",\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), searchResults.decks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"search-section-title\",\n            children: \"Decks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"results-list\",\n            children: searchResults.decks.map(deck => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"result-item\",\n              onClick: () => handleDeckResultClick(deck.id),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-sign\",\n                children: deck.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-deck\",\n                children: \"Deck\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 23\n              }, this)]\n            }, deck.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }, this), searchResults.cards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"search-section-title\",\n            children: \"Signs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"results-list\",\n            children: searchResults.cards.map(result => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"result-item\",\n              onClick: () => handleCardResultClick(result.deck.id, result.id),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-sign\",\n                children: result.answer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-deck\",\n                children: result.deck.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 23\n              }, this)]\n            }, result.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), !hasSearchResults && searchTerm.trim() && !isSearching && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-results\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"No results found matching \\\"\", searchTerm, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deck-grid\",\n      children: decks.map(deck => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/deck/${deck.id}`,\n        className: \"deck-link\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"deck-card\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: deck.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)\n      }, deck.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"JJd3bbCK7v7ZkWVjt6u8yW3ojd8=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","axios","jsxDEV","_jsxDEV","Home","_s","decks","setDecks","loading","setLoading","error","setError","searchTerm","setSearchTerm","searchResults","setSearchResults","cards","isSearching","setIsSearching","navigate","fetchData","console","log","usersResponse","get","process","env","REACT_APP_API_URL","data","length","Error","demoUser","find","user","email","id","decksResponse","fetchedDecks","err","message","handleSearch","e","preventDefault","trim","response","params","term","handleCardResultClick","deckId","cardId","state","fromSearch","highlightCardId","handleDeckResultClick","clearSearch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","hasSearchResults","onSubmit","type","value","onChange","target","placeholder","map","deck","title","result","answer","to","_c","$RefreshReg$"],"sources":["/Users/gyanmistry/SoftdevI/ASL-Study-Tool/ASLStudyTool/client/src/components/Home.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './Home.css';\n\n// Removing the conflicting inline styles entirely - using only the CSS file styles\n\ninterface User {\n  id: string;\n  email: string;\n}\n\ninterface Deck {\n  id: string;\n  title: string;\n  user_id: string;\n  type?: string;\n}\n\ninterface SearchResult {\n  id: string;\n  answer: string;\n  video_url: string;\n  deck_id: string;\n  deck: {\n    id: string;\n    title: string;\n  };\n  type: string;\n}\n\nconst Home: React.FC = () => {\n  const [decks, setDecks] = useState<Deck[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState<{ cards: SearchResult[], decks: Deck[] }>({\n    cards: [],\n    decks: []\n  });\n  const [isSearching, setIsSearching] = useState(false);\n  \n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      \n      try {\n        console.log('Starting data fetch...');\n        // First, get the demo user\n        const usersResponse = await axios.get(`${process.env.REACT_APP_API_URL}/api/users`);\n        \n        console.log('Users API response:', usersResponse.data);\n        \n        if (!usersResponse.data || usersResponse.data.length === 0) {\n          throw new Error('No users found');\n        }\n        \n        const demoUser = usersResponse.data.find((user: User) => user.email === 'demo@example.com');\n        console.log('Found demo user:', demoUser);\n        \n        if (!demoUser) {\n          throw new Error('Demo user not found');\n        }\n\n        // Then fetch decks for that user\n        console.log('Fetching decks for user:', demoUser.id);\n        const decksResponse = await axios.get(`${process.env.REACT_APP_API_URL}/api/decks/${demoUser.id}`);\n        \n        console.log('Decks API response:', decksResponse.data);\n        \n        if (!decksResponse.data) {\n          throw new Error('No decks data received');\n        }\n        \n        const fetchedDecks = decksResponse.data;\n        setDecks(fetchedDecks);\n        console.log(`Fetched ${fetchedDecks.length} decks`);\n        \n        setLoading(false);\n      } catch (err: any) {\n        console.error('Error fetching data:', err);\n        setError(err.message || 'Failed to load decks');\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleSearch = async (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log('Search triggered with term:', searchTerm);\n    \n    if (!searchTerm.trim()) {\n      console.log('Empty search term, clearing results');\n      setSearchResults({ cards: [], decks: [] });\n      return;\n    }\n    \n    setIsSearching(true);\n    \n    try {\n      // Use the server-side search API\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/search`, {\n        params: { term: searchTerm.trim() }\n      });\n      \n      console.log('Search API response:', response.data);\n      setSearchResults(response.data);\n    } catch (err: any) {\n      console.error('Error searching:', err);\n      // Show an empty result set on error\n      setSearchResults({ cards: [], decks: [] });\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  const handleCardResultClick = (deckId: string, cardId: string) => {\n    navigate(`/deck/${deckId}`, { state: { fromSearch: true, highlightCardId: cardId }});\n  };\n  \n  const handleDeckResultClick = (deckId: string) => {\n    navigate(`/deck/${deckId}`);\n  };\n\n  const clearSearch = () => {\n    setSearchTerm('');\n    setSearchResults({ cards: [], decks: [] });\n  };\n\n  if (loading) {\n    return (\n      <div className=\"home-container loading\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading decks...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"home-container error\">\n        <div className=\"error-message\">\n          <h2>Error</h2>\n          <p>{error}</p>\n          <button onClick={() => window.location.reload()}>Try Again</button>\n        </div>\n      </div>\n    );\n  }\n\n  const hasSearchResults = searchResults.cards.length > 0 || searchResults.decks.length > 0;\n\n  return (\n    <div className=\"home-container\">\n      <h1 className=\"home-title\">ASL Study Decks</h1>\n      \n      <div className=\"search-container\">\n        <form onSubmit={handleSearch} className=\"search-form\">\n          <input\n            type=\"text\"\n            value={searchTerm}\n            onChange={(e) => {\n              setSearchTerm(e.target.value);\n              if (!e.target.value.trim()) {\n                setSearchResults({ cards: [], decks: [] });\n              }\n            }}\n            placeholder=\"Search for signs or decks...\"\n            className=\"search-input\"\n          />\n          <button type=\"submit\" className=\"search-button\">\n            Search\n          </button>\n        </form>\n        \n        {isSearching && (\n          <div className=\"search-loading\">\n            <div className=\"loading-spinner-small\"></div>\n            <p>Searching...</p>\n          </div>\n        )}\n        \n        {hasSearchResults && (\n          <div className=\"search-results-container\">\n            <div className=\"search-results-header\">\n              <h3>Search Results</h3>\n              <button onClick={clearSearch} className=\"clear-search-btn\">Clear</button>\n            </div>\n            \n            {searchResults.decks.length > 0 && (\n              <div className=\"search-section\">\n                <h4 className=\"search-section-title\">Decks</h4>\n                <ul className=\"results-list\">\n                  {searchResults.decks.map(deck => (\n                    <li key={deck.id} className=\"result-item\" onClick={() => handleDeckResultClick(deck.id)}>\n                      <span className=\"result-sign\">{deck.title}</span>\n                      <span className=\"result-deck\">Deck</span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n            \n            {searchResults.cards.length > 0 && (\n              <div className=\"search-section\">\n                <h4 className=\"search-section-title\">Signs</h4>\n                <ul className=\"results-list\">\n                  {searchResults.cards.map(result => (\n                    <li key={result.id} className=\"result-item\" onClick={() => handleCardResultClick(result.deck.id, result.id)}>\n                      <span className=\"result-sign\">{result.answer}</span>\n                      <span className=\"result-deck\">{result.deck.title}</span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </div>\n        )}\n        \n        {!hasSearchResults && searchTerm.trim() && !isSearching && (\n          <div className=\"no-results\">\n            <p>No results found matching \"{searchTerm}\"</p>\n          </div>\n        )}\n      </div>\n      \n      <div className=\"deck-grid\">\n        {decks.map(deck => (\n          <Link \n            key={deck.id}\n            to={`/deck/${deck.id}`}\n            className=\"deck-link\"\n          >\n            <div className=\"deck-card\">\n              <h2>{deck.title}</h2>\n            </div>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}