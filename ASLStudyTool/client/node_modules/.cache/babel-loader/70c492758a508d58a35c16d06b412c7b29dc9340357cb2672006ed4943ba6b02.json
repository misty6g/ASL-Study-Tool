{"ast":null,"code":"var _jsxFileName = \"/Users/gyanmistry/SoftdevI/ASL-Study-Tool/ASLStudyTool/client/src/components/TestMode.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport ReactPlayer from 'react-player';\nimport './TestMode.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestMode = ({\n  deckId\n}) => {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n  const [testComplete, setTestComplete] = useState(false);\n  const [results, setResults] = useState({\n    correct: [],\n    incorrect: [],\n    userAnswers: []\n  });\n  const [videoSource, setVideoSource] = useState('');\n  const [starredCardIds, setStarredCardIds] = useState([]);\n  const [testMode, setTestMode] = useState('all');\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Fetch starred cards\n  useEffect(() => {\n    const fetchStarredCards = async () => {\n      try {\n        // In a real app, you'd get the actual user ID from auth\n        const demoUserId = \"demo-user-id\"; // Hardcoded for demo\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/users/${demoUserId}/starred-card-ids`);\n        setStarredCardIds(response.data.cardIds || []);\n      } catch (err) {\n        console.error(\"Error fetching starred cards:\", err);\n        setStarredCardIds([]);\n      }\n    };\n    fetchStarredCards();\n\n    // Check if we should only test starred cards\n    if (location.state && location.state.starredOnly) {\n      setTestMode('starred');\n    }\n  }, [location.state]);\n  useEffect(() => {\n    const fetchCards = async () => {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/cards/${deckId}`);\n        let fetchedCards = [...response.data];\n\n        // If we're in starred-only mode, filter the cards\n        if (testMode === 'starred' && starredCardIds.length > 0) {\n          fetchedCards = fetchedCards.filter(card => starredCardIds.includes(card.id));\n        }\n\n        // Shuffle the cards for the test\n        const shuffledCards = fetchedCards.sort(() => Math.random() - 0.5);\n        setCards(shuffledCards);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to load cards');\n        setLoading(false);\n      }\n    };\n\n    // Only fetch cards once starredCardIds is available\n    if (starredCardIds.length > 0 || testMode === 'all') {\n      fetchCards();\n    }\n  }, [deckId, testMode, starredCardIds]);\n  useEffect(() => {\n    if (cards.length > 0 && currentCardIndex < cards.length) {\n      const currentCard = cards[currentCardIndex];\n      // Transform Google Drive URL if needed (similar to Flashcard component)\n      if (currentCard.video_url.includes('drive.google.com')) {\n        const transformedUrl = transformGoogleDriveUrl(currentCard.video_url);\n        setVideoSource(transformedUrl);\n      } else {\n        setVideoSource(currentCard.video_url);\n      }\n    }\n  }, [cards, currentCardIndex]);\n\n  // Add keyboard event listener for Enter key to navigate to next card\n  useEffect(() => {\n    const handleKeyPress = e => {\n      if (e.key === 'Enter' && submitted && !testComplete) {\n        handleNextCard();\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => {\n      window.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [submitted, testComplete, currentCardIndex, cards.length]);\n  const transformGoogleDriveUrl = url => {\n    // Check if it's a Google Drive URL\n    if (url.includes('drive.google.com')) {\n      // Extract file ID from URL\n      let fileId = '';\n\n      // Handle different Google Drive URL formats\n      if (url.includes('drive.google.com/file/d/')) {\n        // Format: https://drive.google.com/file/d/{fileId}/view\n        const match = url.match(/\\/file\\/d\\/([^\\/]+)/);\n        if (match && match[1]) {\n          fileId = match[1];\n        }\n      } else if (url.includes('drive.google.com/open?id=')) {\n        // Format: https://drive.google.com/open?id={fileId}\n        const match = url.match(/open\\?id=([^&]+)/);\n        if (match && match[1]) {\n          fileId = match[1];\n        }\n      } else if (url.includes('id=')) {\n        // Format: https://drive.google.com/uc?id={fileId}\n        const match = url.match(/id=([^&]+)/);\n        if (match && match[1]) {\n          fileId = match[1];\n        }\n      }\n      if (fileId) {\n        return `https://drive.google.com/file/d/${fileId}/preview`;\n      }\n    }\n    return url;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!submitted && cards.length > 0) {\n      const currentCard = cards[currentCardIndex];\n      const isCorrect = userAnswer.trim().toLowerCase() === currentCard.answer.trim().toLowerCase();\n\n      // Update results\n      if (isCorrect) {\n        setResults(prevResults => ({\n          ...prevResults,\n          correct: [...prevResults.correct, currentCard],\n          userAnswers: [...prevResults.userAnswers, userAnswer]\n        }));\n      } else {\n        setResults(prevResults => ({\n          ...prevResults,\n          incorrect: [...prevResults.incorrect, currentCard],\n          userAnswers: [...prevResults.userAnswers, userAnswer]\n        }));\n\n        // Auto-star incorrect answers\n        if (!starredCardIds.includes(currentCard.id)) {\n          try {\n            // In a real app, you'd get the actual user ID from auth\n            const demoUserId = \"demo-user-id\"; // Hardcoded for demo\n\n            // Star the card\n            await axios.post(`${process.env.REACT_APP_API_URL}/api/cards/${currentCard.id}/star`, {\n              userId: demoUserId\n            });\n\n            // Update starred cards state\n            setStarredCardIds(prev => [...prev, currentCard.id]);\n          } catch (err) {\n            console.error(\"Error starring incorrect card:\", err);\n          }\n        }\n      }\n      setSubmitted(true);\n    }\n  };\n  const handleNextCard = () => {\n    if (currentCardIndex < cards.length - 1) {\n      setCurrentCardIndex(currentCardIndex + 1);\n      setUserAnswer('');\n      setSubmitted(false);\n    } else {\n      setTestComplete(true);\n    }\n  };\n  const handleBackToDeck = () => {\n    navigate(`/deck/${deckId}`);\n  };\n  const handleStartOver = () => {\n    setCurrentCardIndex(0);\n    setUserAnswer('');\n    setSubmitted(false);\n    setTestComplete(false);\n    setResults({\n      correct: [],\n      incorrect: [],\n      userAnswers: []\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-container loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading test...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-container error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBackToDeck,\n        className: \"back-to-deck-btn\",\n        children: \"Back to Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this);\n  }\n  if (cards.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-container error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Cards Available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), testMode === 'starred' ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You don't have any starred cards in this deck yet. Star some cards first or try the full test.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This deck doesn't have any cards to test with.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBackToDeck,\n        className: \"back-to-deck-btn\",\n        children: \"Back to Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this);\n  }\n  if (testComplete) {\n    const totalCards = results.correct.length + results.incorrect.length;\n    const score = Math.round(results.correct.length / totalCards * 100);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-container results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Test Complete!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score\",\n          children: [\"Score: \", score, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"correct-count\",\n            children: [results.correct.length, \" correct\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"incorrect-count\",\n            children: [results.incorrect.length, \" incorrect\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), results.incorrect.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"incorrect-cards\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Incorrect Answers (Automatically Starred)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"results-list\",\n          children: results.incorrect.map((card, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"result-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-answer\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Correct answer:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 21\n              }, this), \" \", card.answer]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-user-answer\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Your answer:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 21\n              }, this), \" \", results.userAnswers[results.correct.length + index]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 19\n            }, this)]\n          }, card.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStartOver,\n          className: \"start-over-btn\",\n          children: \"Start Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBackToDeck,\n          className: \"back-to-deck-btn\",\n          children: \"Back to Deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this);\n  }\n  const currentCard = cards[currentCardIndex];\n  const isCorrect = submitted && userAnswer.trim().toLowerCase() === currentCard.answer.trim().toLowerCase();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBackToDeck,\n        className: \"back-btn\",\n        children: \"\\u2190 Back to Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ASL Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        children: [currentCardIndex + 1, \" of \", cards.length, testMode === 'starred' && ' (Starred Cards Only)']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: videoSource && (videoSource.includes('/preview') ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: videoSource,\n          width: \"100%\",\n          height: \"100%\",\n          allow: \"autoplay\",\n          allowFullScreen: true,\n          style: {\n            border: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(ReactPlayer, {\n          url: videoSource,\n          width: \"100%\",\n          height: \"100%\",\n          controls: true,\n          playing: !submitted,\n          config: {\n            file: {\n              attributes: {\n                controlsList: 'nodownload',\n                disablePictureInPicture: true\n              },\n              forceVideo: true\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), !submitted ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"answer-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"answer\",\n            children: \"What is the sign?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"answer\",\n            type: \"text\",\n            value: userAnswer,\n            onChange: e => setUserAnswer(e.target.value),\n            placeholder: \"Type your answer here\",\n            autoComplete: \"off\",\n            autoFocus: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `feedback ${isCorrect ? 'correct' : 'incorrect'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: isCorrect ? 'Correct!' : 'Incorrect'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The correct answer is: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: currentCard.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 38\n          }, this), !isCorrect && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"auto-starred\",\n            children: \" (Auto-starred for review)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextCard,\n          className: \"next-btn\",\n          children: currentCardIndex < cards.length - 1 ? 'Next Sign' : 'See Results'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 5\n  }, this);\n};\n_s(TestMode, \"t8kEy75AHEd7C9lkYe7/qdiUc2o=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = TestMode;\nexport default TestMode;\nvar _c;\n$RefreshReg$(_c, \"TestMode\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","axios","ReactPlayer","jsxDEV","_jsxDEV","TestMode","deckId","_s","cards","setCards","loading","setLoading","error","setError","currentCardIndex","setCurrentCardIndex","userAnswer","setUserAnswer","submitted","setSubmitted","testComplete","setTestComplete","results","setResults","correct","incorrect","userAnswers","videoSource","setVideoSource","starredCardIds","setStarredCardIds","testMode","setTestMode","navigate","location","fetchStarredCards","demoUserId","response","get","process","env","REACT_APP_API_URL","data","cardIds","err","console","state","starredOnly","fetchCards","fetchedCards","length","filter","card","includes","id","shuffledCards","sort","Math","random","currentCard","video_url","transformedUrl","transformGoogleDriveUrl","handleKeyPress","e","key","handleNextCard","window","addEventListener","removeEventListener","url","fileId","match","handleSubmit","preventDefault","isCorrect","trim","toLowerCase","answer","prevResults","post","userId","prev","handleBackToDeck","handleStartOver","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","totalCards","score","round","map","index","src","width","height","allow","allowFullScreen","style","border","controls","playing","config","file","attributes","controlsList","disablePictureInPicture","forceVideo","onSubmit","htmlFor","type","value","onChange","target","placeholder","autoComplete","autoFocus","required","_c","$RefreshReg$"],"sources":["/Users/gyanmistry/SoftdevI/ASL-Study-Tool/ASLStudyTool/client/src/components/TestMode.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport ReactPlayer from 'react-player';\nimport './TestMode.css';\n\ninterface Card {\n  id: string;\n  video_url: string;\n  answer: string;\n  deck_id: string;\n}\n\ninterface TestModeProps {\n  deckId: string;\n}\n\nconst TestMode: React.FC<TestModeProps> = ({ deckId }) => {\n  const [cards, setCards] = useState<Card[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n  const [testComplete, setTestComplete] = useState(false);\n  const [results, setResults] = useState<{ correct: Card[], incorrect: Card[], userAnswers: string[] }>({\n    correct: [],\n    incorrect: [],\n    userAnswers: []\n  });\n  const [videoSource, setVideoSource] = useState<string>('');\n  const [starredCardIds, setStarredCardIds] = useState<string[]>([]);\n  const [testMode, setTestMode] = useState<'all' | 'starred'>('all');\n  \n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Fetch starred cards\n  useEffect(() => {\n    const fetchStarredCards = async () => {\n      try {\n        // In a real app, you'd get the actual user ID from auth\n        const demoUserId = \"demo-user-id\"; // Hardcoded for demo\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/users/${demoUserId}/starred-card-ids`);\n        setStarredCardIds(response.data.cardIds || []);\n      } catch (err) {\n        console.error(\"Error fetching starred cards:\", err);\n        setStarredCardIds([]);\n      }\n    };\n\n    fetchStarredCards();\n    \n    // Check if we should only test starred cards\n    if (location.state && (location.state as any).starredOnly) {\n      setTestMode('starred');\n    }\n  }, [location.state]);\n\n  useEffect(() => {\n    const fetchCards = async () => {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/cards/${deckId}`);\n        let fetchedCards = [...response.data];\n        \n        // If we're in starred-only mode, filter the cards\n        if (testMode === 'starred' && starredCardIds.length > 0) {\n          fetchedCards = fetchedCards.filter(card => starredCardIds.includes(card.id));\n        }\n        \n        // Shuffle the cards for the test\n        const shuffledCards = fetchedCards.sort(() => Math.random() - 0.5);\n        setCards(shuffledCards);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to load cards');\n        setLoading(false);\n      }\n    };\n\n    // Only fetch cards once starredCardIds is available\n    if (starredCardIds.length > 0 || testMode === 'all') {\n      fetchCards();\n    }\n  }, [deckId, testMode, starredCardIds]);\n\n  useEffect(() => {\n    if (cards.length > 0 && currentCardIndex < cards.length) {\n      const currentCard = cards[currentCardIndex];\n      // Transform Google Drive URL if needed (similar to Flashcard component)\n      if (currentCard.video_url.includes('drive.google.com')) {\n        const transformedUrl = transformGoogleDriveUrl(currentCard.video_url);\n        setVideoSource(transformedUrl);\n      } else {\n        setVideoSource(currentCard.video_url);\n      }\n    }\n  }, [cards, currentCardIndex]);\n\n  // Add keyboard event listener for Enter key to navigate to next card\n  useEffect(() => {\n    const handleKeyPress = (e: KeyboardEvent) => {\n      if (e.key === 'Enter' && submitted && !testComplete) {\n        handleNextCard();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => {\n      window.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [submitted, testComplete, currentCardIndex, cards.length]);\n\n  const transformGoogleDriveUrl = (url: string): string => {\n    // Check if it's a Google Drive URL\n    if (url.includes('drive.google.com')) {\n      // Extract file ID from URL\n      let fileId = '';\n      \n      // Handle different Google Drive URL formats\n      if (url.includes('drive.google.com/file/d/')) {\n        // Format: https://drive.google.com/file/d/{fileId}/view\n        const match = url.match(/\\/file\\/d\\/([^\\/]+)/);\n        if (match && match[1]) {\n          fileId = match[1];\n        }\n      } else if (url.includes('drive.google.com/open?id=')) {\n        // Format: https://drive.google.com/open?id={fileId}\n        const match = url.match(/open\\?id=([^&]+)/);\n        if (match && match[1]) {\n          fileId = match[1];\n        }\n      } else if (url.includes('id=')) {\n        // Format: https://drive.google.com/uc?id={fileId}\n        const match = url.match(/id=([^&]+)/);\n        if (match && match[1]) {\n          fileId = match[1];\n        }\n      }\n      \n      if (fileId) {\n        return `https://drive.google.com/file/d/${fileId}/preview`;\n      }\n    }\n    \n    return url;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!submitted && cards.length > 0) {\n      const currentCard = cards[currentCardIndex];\n      const isCorrect = userAnswer.trim().toLowerCase() === currentCard.answer.trim().toLowerCase();\n      \n      // Update results\n      if (isCorrect) {\n        setResults(prevResults => ({\n          ...prevResults,\n          correct: [...prevResults.correct, currentCard],\n          userAnswers: [...prevResults.userAnswers, userAnswer]\n        }));\n      } else {\n        setResults(prevResults => ({\n          ...prevResults,\n          incorrect: [...prevResults.incorrect, currentCard],\n          userAnswers: [...prevResults.userAnswers, userAnswer]\n        }));\n        \n        // Auto-star incorrect answers\n        if (!starredCardIds.includes(currentCard.id)) {\n          try {\n            // In a real app, you'd get the actual user ID from auth\n            const demoUserId = \"demo-user-id\"; // Hardcoded for demo\n            \n            // Star the card\n            await axios.post(`${process.env.REACT_APP_API_URL}/api/cards/${currentCard.id}/star`, { \n              userId: demoUserId \n            });\n            \n            // Update starred cards state\n            setStarredCardIds(prev => [...prev, currentCard.id]);\n          } catch (err) {\n            console.error(\"Error starring incorrect card:\", err);\n          }\n        }\n      }\n      \n      setSubmitted(true);\n    }\n  };\n\n  const handleNextCard = () => {\n    if (currentCardIndex < cards.length - 1) {\n      setCurrentCardIndex(currentCardIndex + 1);\n      setUserAnswer('');\n      setSubmitted(false);\n    } else {\n      setTestComplete(true);\n    }\n  };\n\n  const handleBackToDeck = () => {\n    navigate(`/deck/${deckId}`);\n  };\n\n  const handleStartOver = () => {\n    setCurrentCardIndex(0);\n    setUserAnswer('');\n    setSubmitted(false);\n    setTestComplete(false);\n    setResults({\n      correct: [],\n      incorrect: [],\n      userAnswers: []\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className=\"test-container loading\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading test...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"test-container error\">\n        <h2>Error</h2>\n        <p>{error}</p>\n        <button onClick={handleBackToDeck} className=\"back-to-deck-btn\">\n          Back to Deck\n        </button>\n      </div>\n    );\n  }\n\n  if (cards.length === 0) {\n    return (\n      <div className=\"test-container error\">\n        <h2>No Cards Available</h2>\n        {testMode === 'starred' ? (\n          <p>You don't have any starred cards in this deck yet. Star some cards first or try the full test.</p>\n        ) : (\n          <p>This deck doesn't have any cards to test with.</p>\n        )}\n        <button onClick={handleBackToDeck} className=\"back-to-deck-btn\">\n          Back to Deck\n        </button>\n      </div>\n    );\n  }\n\n  if (testComplete) {\n    const totalCards = results.correct.length + results.incorrect.length;\n    const score = Math.round((results.correct.length / totalCards) * 100);\n    \n    return (\n      <div className=\"test-container results\">\n        <h2>Test Complete!</h2>\n        <div className=\"test-summary\">\n          <div className=\"score\">Score: {score}%</div>\n          <div className=\"stats\">\n            <div className=\"correct-count\">{results.correct.length} correct</div>\n            <div className=\"incorrect-count\">{results.incorrect.length} incorrect</div>\n          </div>\n        </div>\n        \n        {results.incorrect.length > 0 && (\n          <div className=\"incorrect-cards\">\n            <h3>Incorrect Answers (Automatically Starred)</h3>\n            <ul className=\"results-list\">\n              {results.incorrect.map((card, index) => (\n                <li key={card.id} className=\"result-item\">\n                  <div className=\"result-answer\">\n                    <strong>Correct answer:</strong> {card.answer}\n                  </div>\n                  <div className=\"result-user-answer\">\n                    <strong>Your answer:</strong> {results.userAnswers[results.correct.length + index]}\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n        \n        <div className=\"test-actions\">\n          <button onClick={handleStartOver} className=\"start-over-btn\">\n            Start Over\n          </button>\n          <button onClick={handleBackToDeck} className=\"back-to-deck-btn\">\n            Back to Deck\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  const currentCard = cards[currentCardIndex];\n  const isCorrect = submitted && userAnswer.trim().toLowerCase() === currentCard.answer.trim().toLowerCase();\n  \n  return (\n    <div className=\"test-container\">\n      <div className=\"test-header\">\n        <button onClick={handleBackToDeck} className=\"back-btn\">\n          &larr; Back to Deck\n        </button>\n        <h1>ASL Test</h1>\n        <div className=\"progress\">\n          {currentCardIndex + 1} of {cards.length}\n          {testMode === 'starred' && ' (Starred Cards Only)'}\n        </div>\n      </div>\n\n      <div className=\"test-content\">\n        <div className=\"video-container\">\n          {videoSource && (\n            videoSource.includes('/preview') ? (\n              <iframe \n                src={videoSource}\n                width=\"100%\" \n                height=\"100%\" \n                allow=\"autoplay\" \n                allowFullScreen\n                style={{ border: 'none' }}\n              ></iframe>\n            ) : (\n              <ReactPlayer\n                url={videoSource}\n                width=\"100%\"\n                height=\"100%\"\n                controls\n                playing={!submitted}\n                config={{\n                  file: {\n                    attributes: {\n                      controlsList: 'nodownload',\n                      disablePictureInPicture: true\n                    },\n                    forceVideo: true\n                  }\n                }}\n              />\n            )\n          )}\n        </div>\n\n        {!submitted ? (\n          <form onSubmit={handleSubmit} className=\"answer-form\">\n            <div className=\"input-group\">\n              <label htmlFor=\"answer\">What is the sign?</label>\n              <input\n                id=\"answer\"\n                type=\"text\"\n                value={userAnswer}\n                onChange={(e) => setUserAnswer(e.target.value)}\n                placeholder=\"Type your answer here\"\n                autoComplete=\"off\"\n                autoFocus\n                required\n              />\n            </div>\n            <button type=\"submit\" className=\"submit-btn\">\n              Submit\n            </button>\n          </form>\n        ) : (\n          <div className={`feedback ${isCorrect ? 'correct' : 'incorrect'}`}>\n            <h2>\n              {isCorrect ? 'Correct!' : 'Incorrect'}\n            </h2>\n            <p>\n              The correct answer is: <strong>{currentCard.answer}</strong>\n              {!isCorrect && <span className=\"auto-starred\"> (Auto-starred for review)</span>}\n            </p>\n            <button onClick={handleNextCard} className=\"next-btn\">\n              {currentCardIndex < cards.length - 1 ? 'Next Sign' : 'See Results'}\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TestMode; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}