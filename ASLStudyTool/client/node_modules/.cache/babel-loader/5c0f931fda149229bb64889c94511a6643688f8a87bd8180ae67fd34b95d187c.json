{"ast":null,"code":"var _jsxFileName = \"/Users/gyanmistry/SoftdevI/ASL-Study-Tool/ASLStudyTool/client/src/components/Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './Home.css';\n\n// Define the constant here since the import is not working\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOCAL_STORAGE_STARRED_KEY = 'asl_study_tool_starred_cards';\n\n// Removing the conflicting inline styles entirely - using only the CSS file styles\n\nconst Home = () => {\n  _s();\n  var _searchResults$cards, _searchResults$decks;\n  const [decks, setDecks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState({\n    cards: [],\n    decks: []\n  });\n  const [isSearching, setIsSearching] = useState(false);\n  const [starredCards, setStarredCards] = useState([]);\n  const [loadingStarred, setLoadingStarred] = useState(true);\n  const navigate = useNavigate();\n\n  // Fetch starred cards\n  useEffect(() => {\n    const fetchStarredCards = async () => {\n      try {\n        // In a real app, you'd get the actual user ID from auth\n        const demoUserId = \"demo-user-id\"; // Hardcoded for demo\n\n        // Try server first\n        try {\n          const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/users/${demoUserId}/starred-cards`);\n          if (response.data && response.data.cards && response.data.cards.length > 0) {\n            console.log(`Loaded ${response.data.cards.length} starred cards from server`);\n            setStarredCards(response.data.cards);\n          } else {\n            // If server returns no data, try localStorage\n            console.log('No starred cards from server, checking localStorage');\n            const localStarredStr = localStorage.getItem(LOCAL_STORAGE_STARRED_KEY);\n            if (localStarredStr) {\n              try {\n                const localStarredIds = JSON.parse(localStarredStr);\n                console.log(`Found ${localStarredIds.length} starred card IDs in localStorage`);\n\n                // We need to convert IDs to card objects, so fetch all cards from all decks\n                if (localStarredIds.length > 0) {\n                  // Create placeholder cards with just IDs for now (better than nothing)\n                  const placeholderStarredCards = localStarredIds.map(id => ({\n                    id,\n                    answer: \"Starred Card\",\n                    video_url: \"\",\n                    deck_id: \"unknown\",\n                    deck: {\n                      id: \"unknown\",\n                      title: \"Unknown Deck\"\n                    },\n                    type: \"card\"\n                  }));\n                  setStarredCards(placeholderStarredCards);\n                  console.log(`Created ${placeholderStarredCards.length} placeholder cards for starred IDs`);\n                }\n              } catch (e) {\n                console.error('Error parsing localStorage starred cards:', e);\n                setStarredCards([]);\n              }\n            } else {\n              console.log('No starred cards in localStorage either');\n              setStarredCards([]);\n            }\n          }\n        } catch (serverErr) {\n          console.error('Error fetching starred cards from server:', serverErr);\n\n          // If server fails, try localStorage\n          const localStarredStr = localStorage.getItem(LOCAL_STORAGE_STARRED_KEY);\n          if (localStarredStr) {\n            try {\n              const localStarredIds = JSON.parse(localStarredStr);\n              console.log(`Found ${localStarredIds.length} starred card IDs in localStorage`);\n\n              // Create placeholder cards from IDs\n              if (localStarredIds.length > 0) {\n                const placeholderStarredCards = localStarredIds.map(id => ({\n                  id,\n                  answer: \"Starred Card\",\n                  video_url: \"\",\n                  deck_id: \"unknown\",\n                  deck: {\n                    id: \"unknown\",\n                    title: \"Unknown Deck\"\n                  },\n                  type: \"card\"\n                }));\n                setStarredCards(placeholderStarredCards);\n              }\n            } catch (e) {\n              console.error('Error parsing localStorage starred cards:', e);\n              setStarredCards([]);\n            }\n          } else {\n            setStarredCards([]);\n          }\n        }\n      } catch (err) {\n        console.error('Error in starred cards logic:', err);\n        setStarredCards([]);\n      } finally {\n        setLoadingStarred(false);\n      }\n    };\n    fetchStarredCards();\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        console.log('Starting data fetch...');\n        // First, get the demo user\n        const usersResponse = await axios.get(`${process.env.REACT_APP_API_URL}/api/users`);\n        console.log('Users API response:', usersResponse.data);\n        if (!usersResponse.data || usersResponse.data.length === 0) {\n          throw new Error('No users found');\n        }\n        const demoUser = usersResponse.data.find(user => user.email === 'demo@example.com');\n        console.log('Found demo user:', demoUser);\n        if (!demoUser) {\n          throw new Error('Demo user not found');\n        }\n\n        // Then fetch decks for that user\n        console.log('Fetching decks for user:', demoUser.id);\n        const decksResponse = await axios.get(`${process.env.REACT_APP_API_URL}/api/decks/${demoUser.id}`);\n        console.log('Decks API response:', decksResponse.data);\n        if (!decksResponse.data) {\n          throw new Error('No decks data received');\n        }\n        const fetchedDecks = decksResponse.data;\n        setDecks(fetchedDecks);\n        console.log(`Fetched ${fetchedDecks.length} decks`);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError(err.message || 'Failed to load decks');\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleSearch = async e => {\n    e.preventDefault();\n    console.log('Search triggered with term:', searchTerm);\n    if (!searchTerm.trim()) {\n      console.log('Empty search term, clearing results');\n      setSearchResults({\n        cards: [],\n        decks: []\n      });\n      return;\n    }\n    setIsSearching(true);\n    try {\n      // Use the server-side search API\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/search`, {\n        params: {\n          term: searchTerm.trim()\n        }\n      });\n      console.log('Search API response:', response.data);\n\n      // Handle the case when API returns an array instead of {cards, decks} object\n      if (Array.isArray(response.data)) {\n        // If the response is an array, assume it's an array of cards\n        setSearchResults({\n          cards: response.data,\n          decks: []\n        });\n      } else if (response.data && typeof response.data === 'object') {\n        // Ensure cards and decks properties exist\n        const formattedResults = {\n          cards: Array.isArray(response.data.cards) ? response.data.cards : [],\n          decks: Array.isArray(response.data.decks) ? response.data.decks : []\n        };\n        setSearchResults(formattedResults);\n      } else {\n        // Fallback if response has unexpected format\n        setSearchResults({\n          cards: [],\n          decks: []\n        });\n      }\n    } catch (err) {\n      console.error('Error searching:', err);\n      // Show an empty result set on error\n      setSearchResults({\n        cards: [],\n        decks: []\n      });\n    } finally {\n      setIsSearching(false);\n    }\n  };\n  const handleCardResultClick = (deckId, cardId) => {\n    navigate(`/deck/${deckId}`, {\n      state: {\n        fromSearch: true,\n        highlightCardId: cardId\n      }\n    });\n  };\n  const handleDeckResultClick = deckId => {\n    navigate(`/deck/${deckId}`);\n  };\n  const clearSearch = () => {\n    setSearchTerm('');\n    setSearchResults({\n      cards: [],\n      decks: []\n    });\n  };\n  const hasStarredCards = starredCards.length > 0;\n  console.log('Has starred cards:', hasStarredCards, 'Count:', starredCards.length);\n\n  // Handler for when a starred card is clicked\n  const handleStarredCardClick = (cardId, deckId) => {\n    navigate(`/deck/${deckId}`, {\n      state: {\n        fromSearch: true,\n        highlightCardId: cardId\n      }\n    });\n  };\n\n  // Create a virtual starred deck\n  const viewStarredCards = () => {\n    if (starredCards.length > 0) {\n      // Instead of using a test view, send to the deck component with a special flag\n      console.log(\"Viewing all starred cards in deck view\");\n      navigate(`/deck/all-starred`, {\n        state: {\n          allStarred: true,\n          starredCardIds: localStorage.getItem(LOCAL_STORAGE_STARRED_KEY)\n        }\n      });\n    }\n  };\n\n  // Test all starred cards across all decks\n  const testAllStarredCards = () => {\n    if (starredCards.length > 0) {\n      // Navigate to test mode with a special flag indicating we want to test all starred cards\n      navigate(`/test/all-decks`, {\n        state: {\n          starredOnly: true,\n          allDecks: true\n        }\n      });\n    }\n  };\n  if (loading && loadingStarred) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-container loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading decks...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-container error\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.reload(),\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this);\n  }\n  const hasSearchResults = (searchResults === null || searchResults === void 0 ? void 0 : (_searchResults$cards = searchResults.cards) === null || _searchResults$cards === void 0 ? void 0 : _searchResults$cards.length) > 0 || (searchResults === null || searchResults === void 0 ? void 0 : (_searchResults$decks = searchResults.decks) === null || _searchResults$decks === void 0 ? void 0 : _searchResults$decks.length) > 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"home-title\",\n      children: \"ASL Study Decks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), false && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#333',\n        padding: '10px',\n        borderRadius: '5px',\n        margin: '0 0 20px 0',\n        fontSize: '12px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Starred Cards: \", starredCards.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"hasStarredCards: \", hasStarredCards ? 'true' : 'false']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Loading: \", loading ? 'true' : 'false', \", Loading Starred: \", loadingStarred ? 'true' : 'false']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          // Check localStorage\n          const local = localStorage.getItem(LOCAL_STORAGE_STARRED_KEY);\n          console.log('localStorage starred cards:', local);\n          alert('localStorage starred cards: ' + (local || 'none'));\n        },\n        children: \"Check Local Storage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearch,\n        className: \"search-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchTerm,\n          onChange: e => {\n            setSearchTerm(e.target.value);\n            if (!e.target.value.trim()) {\n              setSearchResults({\n                cards: [],\n                decks: []\n              });\n            }\n          },\n          placeholder: \"Search for signs or decks...\",\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"search-button\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), isSearching && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner-small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Searching...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this), hasSearchResults && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-results-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-results-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Search Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: clearSearch,\n            className: \"clear-search-btn\",\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this), searchResults.decks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"search-section-title\",\n            children: \"Decks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"results-list\",\n            children: searchResults.decks.map(deck => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"result-item\",\n              onClick: () => handleDeckResultClick(deck.id),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-sign\",\n                children: deck.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-deck\",\n                children: \"Deck\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 23\n              }, this)]\n            }, deck.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 15\n        }, this), searchResults.cards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"search-section-title\",\n            children: \"Signs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"results-list\",\n            children: searchResults.cards.map(result => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"result-item\",\n              onClick: () => handleCardResultClick(result.deck.id, result.id),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-sign\",\n                children: result.answer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-deck\",\n                children: result.deck.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 23\n              }, this)]\n            }, result.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this), !hasSearchResults && searchTerm.trim() && !isSearching && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-results\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"No results found matching \\\"\", searchTerm, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deck-grid\",\n      children: [hasStarredCards && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deck-link starred-deck-link\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"deck-card starred-deck\",\n          onClick: viewStarredCards,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Starred Cards (\", starredCards.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 11\n      }, this), decks.map(deck => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/deck/${deck.id}`,\n        className: \"deck-link\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"deck-card\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: deck.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this)\n      }, deck.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"Dey7i4ezvIwvU7DfVQcu5bVYw2c=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","axios","jsxDEV","_jsxDEV","LOCAL_STORAGE_STARRED_KEY","Home","_s","_searchResults$cards","_searchResults$decks","decks","setDecks","loading","setLoading","error","setError","searchTerm","setSearchTerm","searchResults","setSearchResults","cards","isSearching","setIsSearching","starredCards","setStarredCards","loadingStarred","setLoadingStarred","navigate","fetchStarredCards","demoUserId","response","get","process","env","REACT_APP_API_URL","data","length","console","log","localStarredStr","localStorage","getItem","localStarredIds","JSON","parse","placeholderStarredCards","map","id","answer","video_url","deck_id","deck","title","type","e","serverErr","err","fetchData","usersResponse","Error","demoUser","find","user","email","decksResponse","fetchedDecks","message","handleSearch","preventDefault","trim","params","term","Array","isArray","formattedResults","handleCardResultClick","deckId","cardId","state","fromSearch","highlightCardId","handleDeckResultClick","clearSearch","hasStarredCards","handleStarredCardClick","viewStarredCards","allStarred","starredCardIds","testAllStarredCards","starredOnly","allDecks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","hasSearchResults","style","background","padding","borderRadius","margin","fontSize","local","alert","onSubmit","value","onChange","target","placeholder","result","to","_c","$RefreshReg$"],"sources":["/Users/gyanmistry/SoftdevI/ASL-Study-Tool/ASLStudyTool/client/src/components/Home.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './Home.css';\n\n// Define the constant here since the import is not working\nconst LOCAL_STORAGE_STARRED_KEY = 'asl_study_tool_starred_cards';\n\n// Removing the conflicting inline styles entirely - using only the CSS file styles\n\ninterface User {\n  id: string;\n  email: string;\n}\n\ninterface Deck {\n  id: string;\n  title: string;\n  user_id: string;\n  type?: string;\n}\n\ninterface SearchResult {\n  id: string;\n  answer: string;\n  video_url: string;\n  deck_id: string;\n  deck: {\n    id: string;\n    title: string;\n  };\n  type: string;\n}\n\nconst Home: React.FC = () => {\n  const [decks, setDecks] = useState<Deck[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState<{ cards: SearchResult[], decks: Deck[] }>({\n    cards: [],\n    decks: []\n  });\n  const [isSearching, setIsSearching] = useState(false);\n  const [starredCards, setStarredCards] = useState<SearchResult[]>([]);\n  const [loadingStarred, setLoadingStarred] = useState(true);\n  \n  const navigate = useNavigate();\n\n  // Fetch starred cards\n  useEffect(() => {\n    const fetchStarredCards = async () => {\n      try {\n        // In a real app, you'd get the actual user ID from auth\n        const demoUserId = \"demo-user-id\"; // Hardcoded for demo\n        \n        // Try server first\n        try {\n          const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/users/${demoUserId}/starred-cards`);\n          if (response.data && response.data.cards && response.data.cards.length > 0) {\n            console.log(`Loaded ${response.data.cards.length} starred cards from server`);\n            setStarredCards(response.data.cards);\n          } else {\n            // If server returns no data, try localStorage\n            console.log('No starred cards from server, checking localStorage');\n            const localStarredStr = localStorage.getItem(LOCAL_STORAGE_STARRED_KEY);\n            if (localStarredStr) {\n              try {\n                const localStarredIds = JSON.parse(localStarredStr);\n                console.log(`Found ${localStarredIds.length} starred card IDs in localStorage`);\n                \n                // We need to convert IDs to card objects, so fetch all cards from all decks\n                if (localStarredIds.length > 0) {\n                  // Create placeholder cards with just IDs for now (better than nothing)\n                  const placeholderStarredCards = localStarredIds.map((id: string) => ({\n                    id,\n                    answer: \"Starred Card\",\n                    video_url: \"\",\n                    deck_id: \"unknown\",\n                    deck: { id: \"unknown\", title: \"Unknown Deck\" },\n                    type: \"card\"\n                  }));\n                  setStarredCards(placeholderStarredCards);\n                  console.log(`Created ${placeholderStarredCards.length} placeholder cards for starred IDs`);\n                }\n              } catch (e) {\n                console.error('Error parsing localStorage starred cards:', e);\n                setStarredCards([]);\n              }\n            } else {\n              console.log('No starred cards in localStorage either');\n              setStarredCards([]);\n            }\n          }\n        } catch (serverErr) {\n          console.error('Error fetching starred cards from server:', serverErr);\n          \n          // If server fails, try localStorage\n          const localStarredStr = localStorage.getItem(LOCAL_STORAGE_STARRED_KEY);\n          if (localStarredStr) {\n            try {\n              const localStarredIds = JSON.parse(localStarredStr);\n              console.log(`Found ${localStarredIds.length} starred card IDs in localStorage`);\n              \n              // Create placeholder cards from IDs\n              if (localStarredIds.length > 0) {\n                const placeholderStarredCards = localStarredIds.map((id: string) => ({\n                  id,\n                  answer: \"Starred Card\",\n                  video_url: \"\",\n                  deck_id: \"unknown\",\n                  deck: { id: \"unknown\", title: \"Unknown Deck\" },\n                  type: \"card\"\n                }));\n                setStarredCards(placeholderStarredCards);\n              }\n            } catch (e) {\n              console.error('Error parsing localStorage starred cards:', e);\n              setStarredCards([]);\n            }\n          } else {\n            setStarredCards([]);\n          }\n        }\n      } catch (err) {\n        console.error('Error in starred cards logic:', err);\n        setStarredCards([]);\n      } finally {\n        setLoadingStarred(false);\n      }\n    };\n\n    fetchStarredCards();\n  }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      \n      try {\n        console.log('Starting data fetch...');\n        // First, get the demo user\n        const usersResponse = await axios.get(`${process.env.REACT_APP_API_URL}/api/users`);\n        \n        console.log('Users API response:', usersResponse.data);\n        \n        if (!usersResponse.data || usersResponse.data.length === 0) {\n          throw new Error('No users found');\n        }\n        \n        const demoUser = usersResponse.data.find((user: User) => user.email === 'demo@example.com');\n        console.log('Found demo user:', demoUser);\n        \n        if (!demoUser) {\n          throw new Error('Demo user not found');\n        }\n\n        // Then fetch decks for that user\n        console.log('Fetching decks for user:', demoUser.id);\n        const decksResponse = await axios.get(`${process.env.REACT_APP_API_URL}/api/decks/${demoUser.id}`);\n        \n        console.log('Decks API response:', decksResponse.data);\n        \n        if (!decksResponse.data) {\n          throw new Error('No decks data received');\n        }\n        \n        const fetchedDecks = decksResponse.data;\n        setDecks(fetchedDecks);\n        console.log(`Fetched ${fetchedDecks.length} decks`);\n        \n        setLoading(false);\n      } catch (err: any) {\n        console.error('Error fetching data:', err);\n        setError(err.message || 'Failed to load decks');\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleSearch = async (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log('Search triggered with term:', searchTerm);\n    \n    if (!searchTerm.trim()) {\n      console.log('Empty search term, clearing results');\n      setSearchResults({ cards: [], decks: [] });\n      return;\n    }\n    \n    setIsSearching(true);\n    \n    try {\n      // Use the server-side search API\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/search`, {\n        params: { term: searchTerm.trim() }\n      });\n      \n      console.log('Search API response:', response.data);\n      \n      // Handle the case when API returns an array instead of {cards, decks} object\n      if (Array.isArray(response.data)) {\n        // If the response is an array, assume it's an array of cards\n        setSearchResults({ \n          cards: response.data, \n          decks: [] \n        });\n      } else if (response.data && typeof response.data === 'object') {\n        // Ensure cards and decks properties exist\n        const formattedResults = {\n          cards: Array.isArray(response.data.cards) ? response.data.cards : [],\n          decks: Array.isArray(response.data.decks) ? response.data.decks : []\n        };\n        setSearchResults(formattedResults);\n      } else {\n        // Fallback if response has unexpected format\n        setSearchResults({ cards: [], decks: [] });\n      }\n    } catch (err: any) {\n      console.error('Error searching:', err);\n      // Show an empty result set on error\n      setSearchResults({ cards: [], decks: [] });\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  const handleCardResultClick = (deckId: string, cardId: string) => {\n    navigate(`/deck/${deckId}`, { state: { fromSearch: true, highlightCardId: cardId }});\n  };\n  \n  const handleDeckResultClick = (deckId: string) => {\n    navigate(`/deck/${deckId}`);\n  };\n\n  const clearSearch = () => {\n    setSearchTerm('');\n    setSearchResults({ cards: [], decks: [] });\n  };\n\n  const hasStarredCards = starredCards.length > 0;\n  console.log('Has starred cards:', hasStarredCards, 'Count:', starredCards.length);\n\n  // Handler for when a starred card is clicked\n  const handleStarredCardClick = (cardId: string, deckId: string) => {\n    navigate(`/deck/${deckId}`, { state: { fromSearch: true, highlightCardId: cardId }});\n  };\n\n  // Create a virtual starred deck\n  const viewStarredCards = () => {\n    if (starredCards.length > 0) {\n      // Instead of using a test view, send to the deck component with a special flag\n      console.log(\"Viewing all starred cards in deck view\");\n      navigate(`/deck/all-starred`, { \n        state: { \n          allStarred: true,\n          starredCardIds: localStorage.getItem(LOCAL_STORAGE_STARRED_KEY)\n        }\n      });\n    }\n  };\n  \n  // Test all starred cards across all decks\n  const testAllStarredCards = () => {\n    if (starredCards.length > 0) {\n      // Navigate to test mode with a special flag indicating we want to test all starred cards\n      navigate(`/test/all-decks`, { state: { starredOnly: true, allDecks: true }});\n    }\n  };\n\n  if (loading && loadingStarred) {\n    return (\n      <div className=\"home-container loading\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading decks...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"home-container error\">\n        <div className=\"error-message\">\n          <h2>Error</h2>\n          <p>{error}</p>\n          <button onClick={() => window.location.reload()}>Try Again</button>\n        </div>\n      </div>\n    );\n  }\n\n  const hasSearchResults = \n    (searchResults?.cards?.length > 0) || \n    (searchResults?.decks?.length > 0);\n\n  return (\n    <div className=\"home-container\">\n      <h1 className=\"home-title\">ASL Study Decks</h1>\n      \n      {/* Debug section - hidden in production */}\n      {false && (\n        <div style={{ \n          background: '#333', \n          padding: '10px', \n          borderRadius: '5px', \n          margin: '0 0 20px 0',\n          fontSize: '12px'\n        }}>\n          <p>Starred Cards: {starredCards.length}</p>\n          <p>hasStarredCards: {hasStarredCards ? 'true' : 'false'}</p>\n          <p>Loading: {loading ? 'true' : 'false'}, Loading Starred: {loadingStarred ? 'true' : 'false'}</p>\n          <button onClick={() => {\n            // Check localStorage\n            const local = localStorage.getItem(LOCAL_STORAGE_STARRED_KEY);\n            console.log('localStorage starred cards:', local);\n            alert('localStorage starred cards: ' + (local || 'none'));\n          }}>Check Local Storage</button>\n        </div>\n      )}\n      \n      <div className=\"search-container\">\n        <form onSubmit={handleSearch} className=\"search-form\">\n          <input\n            type=\"text\"\n            value={searchTerm}\n            onChange={(e) => {\n              setSearchTerm(e.target.value);\n              if (!e.target.value.trim()) {\n                setSearchResults({ cards: [], decks: [] });\n              }\n            }}\n            placeholder=\"Search for signs or decks...\"\n            className=\"search-input\"\n          />\n          <button type=\"submit\" className=\"search-button\">\n            Search\n          </button>\n        </form>\n        \n        {isSearching && (\n          <div className=\"search-loading\">\n            <div className=\"loading-spinner-small\"></div>\n            <p>Searching...</p>\n          </div>\n        )}\n        \n        {hasSearchResults && (\n          <div className=\"search-results-container\">\n            <div className=\"search-results-header\">\n              <h3>Search Results</h3>\n              <button onClick={clearSearch} className=\"clear-search-btn\">Clear</button>\n            </div>\n            \n            {searchResults.decks.length > 0 && (\n              <div className=\"search-section\">\n                <h4 className=\"search-section-title\">Decks</h4>\n                <ul className=\"results-list\">\n                  {searchResults.decks.map(deck => (\n                    <li key={deck.id} className=\"result-item\" onClick={() => handleDeckResultClick(deck.id)}>\n                      <span className=\"result-sign\">{deck.title}</span>\n                      <span className=\"result-deck\">Deck</span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n            \n            {searchResults.cards.length > 0 && (\n              <div className=\"search-section\">\n                <h4 className=\"search-section-title\">Signs</h4>\n                <ul className=\"results-list\">\n                  {searchResults.cards.map(result => (\n                    <li key={result.id} className=\"result-item\" onClick={() => handleCardResultClick(result.deck.id, result.id)}>\n                      <span className=\"result-sign\">{result.answer}</span>\n                      <span className=\"result-deck\">{result.deck.title}</span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </div>\n        )}\n        \n        {!hasSearchResults && searchTerm.trim() && !isSearching && (\n          <div className=\"no-results\">\n            <p>No results found matching \"{searchTerm}\"</p>\n          </div>\n        )}\n      </div>\n      \n      <div className=\"deck-grid\">\n        {/* Starred Cards \"Deck\" - only show if there are starred cards */}\n        {hasStarredCards && (\n          <div className=\"deck-link starred-deck-link\">\n            <div className=\"deck-card starred-deck\" onClick={viewStarredCards}>\n              <h2>Starred Cards ({starredCards.length})</h2>\n            </div>\n          </div>\n        )}\n        \n        {/* Regular decks */}\n        {decks.map(deck => (\n          <Link \n            key={deck.id}\n            to={`/deck/${deck.id}`}\n            className=\"deck-link\"\n          >\n            <div className=\"deck-card\">\n              <h2>{deck.title}</h2>\n            </div>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}